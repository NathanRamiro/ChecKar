{"version":3,"sources":["App.js","index.js"],"names":["App","useState","estaObtendoDados","setEstaObtendoDados","tipoVeiculo","setTipoVeiculo","marcaSelecionada","setMarcaSelecionada","codigoDaMarcaSelecionada","setCodigoDaMarcaSelecionada","veiculoSelecionado","setVeiculoSelecionado","marcasDeVeiculo","setMarcasDeVeiculo","veiculosDaMarca","setVeiculosDaMarca","veiculos","setVeiculos","selectMarcas","useRef","selectVeiculos","props","a","marcas","url","fetch","then","response","json","data","index","length","key","name","id","push","catch","error","alert","console","forEach","valor","dados","info","vet","confirmaTipoDeVeiculo","ObterMarcas","toLowerCase","confirmaMarcaDoVeiculo","ObterVeiculos","confirmaVeiculo","ObterVeiculoEspecifico","useEffect","current","listaMarcas","innerHTML","valores","listaVeiculos","Navbar","bg","variant","Brand","href","Nav","className","Link","Jumbotron","Form","Group","Label","Control","as","onChange","e","target","value","Spinner","animation","ref","Card","text","Header","Title","veiculo","Subtitle","Body","Footer","Button","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20c188c5.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Form from 'react-bootstrap/Form'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nimport { FaCar, FaCartArrowDown, FaMotorcycle, FaCarSide, FaTruck} from 'react-icons/fa'\n\nfunction App() {\n\n  //marca quando os dados da API estão sendo coletados\n  const [estaObtendoDados, setEstaObtendoDados] = useState(false)\n  //armazena o tipo de veiculo\n  const [tipoVeiculo, setTipoVeiculo] = useState('')\n  //armazena a marca selecionada\n  const [marcaSelecionada, setMarcaSelecionada] = useState('')\n  //armazena o codigo da marca selecionada\n  const [codigoDaMarcaSelecionada, setCodigoDaMarcaSelecionada] = useState('')\n  //armazena o nome do veiculo selecionado\n  const [veiculoSelecionado, setVeiculoSelecionado] = useState('')\n\n\n  //armazena a marcas\n  const [marcasDeVeiculo, setMarcasDeVeiculo] = useState([])\n  //armazena os veiculos da marca\n  const [veiculosDaMarca, setVeiculosDaMarca] = useState([])\n  //armazena os veiculos especificos\n  const [veiculos, setVeiculos] = useState([])\n\n  //o segundo select (Marcas)\n  const selectMarcas = useRef(null)\n  //o terceiro select (Meiculos)\n  const selectVeiculos = useRef(null)\n\n  //atualiza o segundo select quando as marcas disponiveis mudam\n  useEffect(() => {\n\n    if (selectMarcas.current !== null) {\n\n      let listaMarcas = marcasDeVeiculo\n\n      selectMarcas.current.innerHTML = ''\n      let info = '<option><option/>'\n\n      listaMarcas.forEach((valores) => {\n\n        info += `<option>${valores.name}<option/>`\n\n      })\n\n      selectMarcas.current.innerHTML = info\n  \n    }\n  }, [marcasDeVeiculo])\n  //atualiza o terceiro select quando os veiculos disponiveis mudam\n  useEffect(() => {\n\n    if (selectVeiculos.current !== null) {\n\n      let listaVeiculos = veiculosDaMarca\n\n      selectVeiculos.current.innerHTML = ''\n      let info = '<option><option/>'\n\n      listaVeiculos.forEach((valores,index) => {\n\n        info += `<option>${valores.info[index].name}<option/>`\n\n      })\n\n      selectVeiculos.current.innerHTML = info\n\n    }\n    \n  }, [veiculosDaMarca])\n\n  //obtem as marcas para um determinado tipo de veiculo\n  async function ObterMarcas(props) {\n\n    //o valor no select do formulario\n    let tipoDeVeiculo = props === 'caminhões' ? 'caminhoes' : props\n\n    let marcas = []\n    let url = `https://fipeapi.appspot.com/api/1/${tipoDeVeiculo}/marcas.json`\n\n    await fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        //coleta certas propriedades e as passa para {marcas}\n        for (let index = 0; index < data.length; index++) {\n          let { key, name, id } = data[index]\n          marcas.push({ key, name, id })\n        }\n\n        setMarcasDeVeiculo(marcas)\n      })\n      .catch(error => {\n        alert(error)\n        console.error(error)\n        setTipoVeiculo('') //faz o segundo select desparecer em caso de erro\n      })\n  }\n  //obtem os veiculos de uma determinada marca\n  async function ObterVeiculos(props) {\n\n    /**\n     * @param string (props) - o noma da marca contido no segundo select\n     */\n\n    let marcas = []\n\n    for (let index = 0; index < marcasDeVeiculo.length; index++) {\n\n      marcas.push(marcasDeVeiculo[index])\n\n    }\n\n    let url = ``\n\n    //procura uma marca especifica e coleta o seu ID\n    marcas.forEach((valor) => {\n\n      if (valor.name === props){\n\n        setCodigoDaMarcaSelecionada(valor.id)\n\n        url = `https://fipeapi.appspot.com/api/1/${tipoVeiculo}/veiculos/${valor.id}.json`\n\n      }\n\n    })\n\n    await fetch(url)\n      .then(response => response.json())\n      .then(data => {\n\n        /*\n        0:{\n  ​\n        fipe_marca: \"HONDA\"\n           fipe_name: \"ADV 150\"\n           id: \"9265\"\n           key: \"adv-9265\"\n           marca: \"HONDA\"\n           name: \"ADV 150\"\n\n        }\n        */\n\n        let dados = []\n\n        for (let index = 0; index < data.length; index++) {\n\n          let {...info} = data\n\n          dados.push({info})\n\n        }\n\n        setVeiculosDaMarca(dados)\n\n      })\n      .catch(error => {\n        alert(error)\n        console.error(error)\n        setMarcaSelecionada('')//em caso de erro o Select desaparece\n      })\n  }\n  //obtem mais informações sobre um veiculo especifico\n  async function ObterVeiculoEspecifico(props){\n\n    /**\n     * @param string (props) - o nome do veiculo contido no terceiro select\n     */\n\n     let veiculos = []\n\n     for (let index = 0; index < veiculosDaMarca.length; index++) {\n \n       veiculos.push(veiculosDaMarca[index])\n \n     }\n \n     let url = ``\n\n     //filtra um veiculo por nome e coleta o seu ID\n     veiculos.forEach((valor, index, vet) => {\n\n      if (valor.info[index].name === props){\n\n        url = `https://fipeapi.appspot.com/api/1/${tipoVeiculo}/veiculo/${codigoDaMarcaSelecionada}/${valor.info[index].id}.json`\n      \n      }\n\n    })\n\n    await fetch(url)\n      .then(response => response.json())\n      .then(data => {\n\n        let dados = []\n\n        for (let index = 0; index < data.length; index++) {\n\n          let {...info} = data[index]\n\n          dados.push({info})\n\n        }\n\n        setVeiculos(dados)\n\n      })\n      .catch(error => {\n        alert(error)\n        console.error(error)\n        setVeiculoSelecionado('')//em caso de erro o Select desaparece\n      })\n\n  }\n\n  //arruma a UI quando o usuario troca o tipo de veiculo\n  function confirmaTipoDeVeiculo(props) {\n\n    setEstaObtendoDados(true)\n\n    setMarcasDeVeiculo([]) //caso ocorra um erro as marcas anteriores ja foram apagadas\n    setTipoVeiculo(props) //faz o segundo select aparecer/desaparecer\n    if (props !== '') {\n\n      ObterMarcas(props.toLowerCase())\n\n    }\n    setEstaObtendoDados(false)\n  }\n  //Arruma a UI quando a marca é trocada\n  function confirmaMarcaDoVeiculo(props) {\n\n    setEstaObtendoDados(true)\n\n    setVeiculosDaMarca([])\n    setMarcaSelecionada(props)\n    if (props !== '') {\n\n      ObterVeiculos(props)\n\n    }\n    setEstaObtendoDados(false)\n  }\n  //Arruma a UI quando o veiculo é trocado\n  function confirmaVeiculo(props) {\n    setEstaObtendoDados(true)\n\n    setVeiculos([])\n    setVeiculoSelecionado(props)\n    if(props !== ''){\n\n      ObterVeiculoEspecifico(props)\n\n    }\n\n    setEstaObtendoDados(false)\n\n  }\n\n  return (\n    <>\n      {/*uma navbar simples que não faz nada*/}\n      <Navbar bg='dark' variant='dark'>\n        <Navbar.Brand href=\"#inicio\"> <FaCar /> ChecKar</Navbar.Brand>\n        <Nav className=\"ml-auto\">\n          <Nav.Link href=\"#inicio\">Início</Nav.Link>\n          <Nav.Link href=\"#inicio\">Nossos Veículos</Nav.Link>\n          <Nav.Link href=\"#Venda\">Venda</Nav.Link>\n          <Nav.Link href=\"#contato\">Contato</Nav.Link>\n        </Nav>\n      </Navbar>\n      {/*um Jumbotrons que segura as opções de busca */}\n      <Jumbotron>\n        <div>\n          <h2>Encontre o veículo que você precisa <FaCartArrowDown /></h2> <br></br>\n          <Form>\n\n            {/*seleciona o tipo de veiculo*/}\n            <Form.Group>\n              <Form.Label>Tipo</Form.Label>\n              <Form.Control as='select' onChange={e => confirmaTipoDeVeiculo(e.target.value)}>\n                <option></option>\n                <option>Carros</option>\n                <option>Motos</option>\n                <option>Caminhões</option>\n              </Form.Control>\n            </Form.Group>\n\n            {/*seleciona as marcas quando disponivel*/}\n            {estaObtendoDados && !tipoVeiculo && \n            <Spinner animation='border' variant='primary' />}\n            {tipoVeiculo &&\n              <Form.Group>\n                <Form.Label>Marca</Form.Label>\n                <Form.Control as='select' onChange={e => confirmaMarcaDoVeiculo(e.target.value)} ref={selectMarcas}>\n                  <option></option>\n                </Form.Control>\n              </Form.Group>}\n\n              {/*seleciona os veiculos da marca selecionada*/}\n              {estaObtendoDados && tipoVeiculo && !marcaSelecionada &&\n              <Spinner animation='border' variant='primary' />}\n              {marcaSelecionada &&\n              <Form.Group>\n                <Form.Label>Veiculo</Form.Label>\n                <Form.Control as='select' onChange={e => confirmaVeiculo(e.target.value)} ref={selectVeiculos}>\n                  <option></option>\n                </Form.Control>\n              </Form.Group>}\n          </Form>\n        </div>\n      </Jumbotron>\n\n      {estaObtendoDados && tipoVeiculo && marcaSelecionada && veiculoSelecionado &&\n      <Spinner animation='border' variant='primary' />}\n      {veiculoSelecionado && marcaSelecionada && tipoVeiculo &&\n        <Jumbotron>\n\n        {veiculos[0] &&\n          <Card bg='secondary' text='light'>\n            <Card.Header>\n              <Card.Title>{veiculos[0]? veiculos[0].info.veiculo:''}</Card.Title>\n              <Card.Subtitle>{veiculos[0]? veiculos[0].info.name:''}</Card.Subtitle>\n            </Card.Header>\n            <Card.Body>\n                {\n                  tipoVeiculo === 'Carros'\n                    ? <FaCarSide />\n                    : tipoVeiculo === 'Motos'\n                      ? <FaMotorcycle />\n                      : <FaTruck />\n                } &nbsp;\n            </Card.Body>\n            <Card.Footer>\n              <Button variant='success'> Fale Com Nossos Vendedores </Button>\n            </Card.Footer>\n          </Card>\n        }\n        <br></br>\n        {veiculos[1] &&\n          <Card bg='secondary' text='light'>\n            <Card.Header>\n              <Card.Title>{veiculos[1]? veiculos[1].info.veiculo:''}</Card.Title>\n              <Card.Subtitle>{veiculos[1]? veiculos[1].info.name:''}</Card.Subtitle>\n            </Card.Header>\n            <Card.Body>\n                {\n                  tipoVeiculo === 'Carros'\n                    ? <FaCarSide />\n                    : tipoVeiculo === 'Motos'\n                      ? <FaMotorcycle />\n                      : <FaTruck />\n                } &nbsp;\n            </Card.Body>\n            <Card.Footer>\n              <Button variant='success'> Fale Com Nossos Vendedores </Button>\n            </Card.Footer>\n          </Card>\n        }\n        <br></br>\n        {veiculos[2] &&\n          <Card bg='secondary' text='light'>\n            <Card.Header>\n              <Card.Title>{veiculos[2]? veiculos[2].info.veiculo:''}</Card.Title>\n              <Card.Subtitle>{veiculos[2]? veiculos[2].info.name:''}</Card.Subtitle>\n            </Card.Header>\n            <Card.Body>\n                {\n                  tipoVeiculo === 'Carros'\n                    ? <FaCarSide />\n                    : tipoVeiculo === 'Motos'\n                      ? <FaMotorcycle />\n                      : <FaTruck />\n                } &nbsp;\n            </Card.Body>\n            <Card.Footer>\n              <Button variant='success'> Fale Com Nossos Vendedores </Button>\n            </Card.Footer>\n          </Card>\n        }\n        </Jumbotron>\n      }\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}